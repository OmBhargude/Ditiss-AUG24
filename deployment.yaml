apiVersion: apps/v1
kind: Deployment
metadata:
  name: subenum1-deployment  # Name of your deployment
  namespace: default # Replace with your namespace if it's not 'default'
spec:
  replicas: 2   # Number of pod replicas (adjust as needed)
  selector:
    matchLabels:
      app: subenum1  # Label to match pods
  template:
    metadata:
      labels:
        app: subenum1  # Label for the pods
      annotations:   # Add Prometheus annotations here
        prometheus.io/scrape: "true"   # Enable scraping
        prometheus.io/port: "8000"   # The port your metrics server is listening on
    spec:
      containers:
      - name: subenum1-container  # Name of the container
        image: om1201/subenum11:latest  # Your image name - VERIFY THIS IS THE UPDATED IMAGE
        ports:
        - containerPort: 5000  # Port your Flask app listens on
        - containerPort: 8000  # Port your metrics server is listening on (add this line)
        env:
        - name: DEBUG_PRINT   # Enable debug prints (Optional)
          value: "true"
        - name: PORT
          value: "5000"
        # --- ADD READINESS AND LIVENESS PROBES HERE ---
        readinessProbe:
          httpGet:
            path: /health    # Assuming you have a /health endpoint in Flask app
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health    # Assuming you have a /health endpoint in Flask app
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:   # Optional: Define resource requests and limits - good practice
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
